@model IEnumerable<RoleToReturnDto>

@{
	ViewData["Title"] = "Index";
}

<h1>All Roles</h1>
<br />
<br />
<br />

@* <div class="m-3 alert alert-danger"> *@
@*    <p>@ViewData["Message"]</p> *@
@* </div> *@

@* <div class="m-3 alert alert-danger"> *@
@*     <p>@ViewBag.Message</p> *@
@* </div> *@

@if (string.IsNullOrEmpty(TempData["Message"] as string))
{
	<div class="m-3 alert alert-info">
		<p>@TempData["Message"]</p>
	</div>
}

<!-- Search Form -->
<form class="d-flex align-items-center gap-2 mb-3">
	<input name="SearchInput" class="form-control" id="SearchInput" placeholder="Search by Name" />
	<input type="submit" class="btn btn-primary px-4" value="Search" />
</form>

<a asp-action="Create" class="btn btn-success px-4 py-2 mb-3">
	<i class="fas fa-user-plus"></i> Create New Role
</a>

@if (Model.Count() > 0) // Efficient check
{
	<div class="table-responsive">
		<table class="table table-hover table-striped table-bordered text-center align-middle fade-in">
			<thead class="table-dark">
				<tr>
					<th><i class="fa-solid fa-id-badge"></i>Id</th>
					<th><i class="fas fa-user"></i> Role Name</th>
					<th><i class="fas fa-info-circle"></i> Details</th>
					<th><i class="fas fa-edit"></i> Update</th>
					<th><i class="fas fa-trash-alt"></i> Delete</th>
				</tr>
			</thead>
			<tbody>
				@foreach (var item in Model)
				{
					<tr>
						<td>@item.Id</td>
						<td>@item.Name</td>
						<partial name="_ButtonsPartialView" model="item.Id" />
					</tr>
				}
			</tbody>
		</table>
	</div>
}
else
{
	<div class="alert alert-warning text-center">
		<h5 class="p-3"><i class="fas fa-exclamation-triangle"></i> No roles found!</h5>
	</div>
}
